Features:
Remaining features: (4) is hashing for set-playlist+2. (5) is build overhaul blocking 4.
(6) is parse-and-execute and help cleanups. (7) is scrobbling and is blocked by 2 and 5.
(8) is having some append-only history to support "prev" track command. (9) PKGBUILD!
(10) Tests!!!
Schedule: 2+4 should be done by evening 08/06. 5 should be done by 08/13.
6 should be done by 08/20 and 7 by 09/01. 9 by 09/15 and 8+10 by 2012. :)
* Playlists
-- Make get-playlist lookup case-insensitive? Insertion via set-playlist should correspond...
-- ... we ought to hash the file to prevent repeat saves of unmodified lists in set-playlist.
---- New format for *playlists* entries is: (name . (songs . hash))
------ Do we use ironclad or just md5 for this? Just md5, scrobbling doesn't need sha1, smaller.
------ We'll also need drakma for the scrobbling support, I expect. Makefiles should be overhauled and deploy tested.
-- Is there a good way to rearrange song order in the playqueue at present?
* Last.fm/Scrobbling Support
-- Should cache when network connectivity is absent and scrobble later.
-- Should only scrobble songs that you listened to more than X% of. X should be a config option.
---- Skipping to the last 5% of the track (say when working on a mixtape) shouldn't trigger scrobbling.
-- Should have a condition for incorrect username+password at the very least.

Cleanup:
-- parse-and-execute in main is almost 300 lines now. Personally, I'd like to see these split up into lots of little functions.
---- Make sure not to lose error handling in the process.
-- print-commands should use introspection via DOCUMENTATION as far as I'm concerned.
---- How do we just get it for commands though? Maybe a defcommand macro with Syntax/Usage + Description.
---- What useful patterns can we pull out into a defcommand macro? Playqueue commands etc?
-- We should clean up build-sbcl.lisp and either update/fix or remove the Makefile stuff+buildscripts for ccl.
---- Cleanup == fix (load "shuffletron.asd") + ccl stuff. Utilize quicklisp?
---- Can we have a single build.lisp file? All we really care is that people can git clone + make + make install.
------ Supporting install to prefixes other than /usr/local/ would also be great.
-- Should we depend on and use quicklisp? I think so.
---- You could even make a separate PKGBUILD for it a la leiningen but I'm dubious on the benefits.
-- Improve condition handling and errors as much as possible. Especially re: playlists and scrobbling.
-- Test suite!!!

Bugs:

Other:
* Vorbis support?
